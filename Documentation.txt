July 14
What I've Done:
Finished Drag/Drop Functionality

What needs to be done:
When dropped the widget is placed on the location of the cursor starting 
at the top left corner of the widget's total area. So it does not appear 
to be dropping in the exact spot the click is released. There needs to be 
an offset or something like this to compensate for it.

Jul 7 - 12
What I've Done:
Removed Unnecessary Starter Content Files
Added new level specifically for the sandbox 'Game'
Added beginning drag functionality for the cell pieces

What needs to be done:
I got stuck on an error where when dragged, the widget spawns in the
top left corner of the screen then swings to the mouse's location.
The widget needs to spawn on the mouse's location when it is being dragged.
I've googled and could not find much help.

June 28 - July 7
What I've Done:
Research inter-blueprint communication
Merge branches and ironed out errors

John Garth - June 23 - 28
What I've Done:
Added randomized blinking
*Note - Removed widget cells and replaced with sprites due to blueprinting
        for blinking cells.

What Needs to be done:
Alter the blinking so that no cells blink at the same time.
Clean up the delay between blinks.
Add green hover over button
Get running on iPad


John Garth - June 16

What I've Done:
The best eyeball scaling and placement of cells I could. Fixed the order of the
cells popping up.

What Needs to be Done:
Fix camera ASAP, the precision scaling (converting metrics from Unity)
Hover over 'New Game' and 'Continue' needs to change the color green.
Information box
Blinking eyes

___________________________________________________________________________________________

John Garth - June 15

What I've Done:
Added a new Big Cell actor / widget to fix a problem with the layering of the cells.
Still haven't implemented this into the scene, but it is on the side. The biggest
problem I have so far is the camera view. I cannot get the aspect ratio of the view
port to match the square resolution that the game in Unity is. The parts of the cells
that should be cut out from falling off the screen is still visible due to the 'black bars'
or 'letter box' on the sides. Once this problem is solved the precision scaling of the scene
can begin.

_____________________________________________________________________________________________

John Garth - June 13

What I've Done:
Added 'pop' sound

//*Note - Could not modify the locations where the cells 'popped' up.
//It may have to do with the source control. I could not figure out how to
//"check in" items so that others can modify them like the documentation says you can.
//https://docs.unrealengine.com/latest/INT/Engine/UI/SourceControl/#sourcecontrolactions
~*Fixed*~
You modify the positions of the cell actors through the widget blueprint.

____________________________________________________________________________________________

Aidan Sullivan - June 13

What I’ve Done:
Got the images popping up on the menu screen
Will add sound and adjust spacing as needed

—————————————————————————————————————————————————————————————————————————————————————————————

John Garth - June 8

What I've done:
Set up 2D environment
Imported all importable assets (to my knowledge)
Converted Textures to Sprites
Organized Textures/Sprites into folder (Content > Assets > BioRube_Assets)
Rough outline of home screen and first level screen
Scaled backgrounds to 1000x1000
Separated both screens into different levels

What needs to be done:
Scaling - Conversion from units in unity to unreal
Understanding how we would implement the conversion from C# to C++
Understanding click events
Locking camera to only show the specific view of the level
Clean up background textures
Analyze the project in Unity and how it ties things together

-------------------------------------------------------------------------------------------------

John Garth - June 9

What I've done:
Reuploaded project in lastest version of Unreal
Set up source control on my personal computer
-- You have to set this up on yours too --
1. Install GitHub and Git (https://git-scm.com/downloads)
2. Locate your Git folder and find 'git.exe' (should be ~\Git\bin\git.exe)
3. Copy your path (C:\Program Files (x86)\Git\bin\git.exe)
4. Open the project
5. Click Source Control between the 'Save' and 'Content' button on the top toolbar
6. Click 'Connect to Source Control'
7. Click the drop down box and select 'git'
8. Paste your path and accept the settings

Clicking the Source Control button and then selecting 'Submit to source control'
will set up the files for committing in GitHub.

Note: The project folder must be pulled from github from the github desktop application.
Open the project from your GitHub repository folder. Should be /GitHub/2016-Summer


-------------------------------------------------------------------------------------------------

John Garth - June 12

What I've done:
Implemented click play button transition to first level scene

